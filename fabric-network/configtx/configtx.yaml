################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:
 
    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &HAOrderer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: HAOrderer
 
        # ID to load the MSP definition as
        ID: HAMSP
 
        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ../crypto-config/ordererOrganizations/HA.com/msp
 
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('HAMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('HAMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('HAMSP.admin')"
        
        OrdererEndpoints:
            - orderer.HA.com:7050

    - &WalesHospital
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: WalesHospitalMSP
 
        # ID to load the MSP definition as
        ID: WalesHospitalMSP
 
        MSPDir: ../crypto-config/peerOrganizations/WalesHospital.com/msp
 
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('WalesHospitalMSP.admin', 'WalesHospitalMSP.peer', 'WalesHospitalMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('WalesHospitalMSP.admin', 'WalesHospitalMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('WalesHospitalMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('WalesHospitalMSP.peer')"
        # # leave this flag set to true.
        # AnchorPeers:
        #     # AnchorPeers defines the location of peers which can be used
        #     # for cross org gossip communication.  Note, this value is only
        #     # encoded in the genesis block in the Application section context
        #     - Host: peer0.WalesHospital.com
        #       Port: 7051
 
    - &MargaretHospital
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: MargaretHospitalMSP
 
        # ID to load the MSP definition as
        ID: MargaretHospitalMSP
 
        MSPDir: ../crypto-config/peerOrganizations/MargaretHospital.com/msp
 
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('MargaretHospitalMSP.admin', 'MargaretHospitalMSP.peer', 'MargaretHospitalMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('MargaretHospitalMSP.admin', 'MargaretHospitalMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('MargaretHospitalMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('MargaretHospitalMSP.peer')"

        # AnchorPeers:
        #     # AnchorPeers defines the location of peers which can be used
        #     # for cross org gossip communication.  Note, this value is only
        #     # encoded in the genesis block in the Application section context
        #     - Host: peer0.MargaretHospitalMSP.com
        #       Port: 9051
################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.4.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.4.3
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.4.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.4.3 or later.
        V2_0: true
 
    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.4.2 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.4.2
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.4.2 orderer capabilities, ensure that all
        # orderers on a channel are at v1.4.2 or later.
        V2_0: true
 
    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.4.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.4.2.
        V2_0: true
 
################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults
 
    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:
 
    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults
 
    # Orderer Type: The orderer implementation to start
    # Available types are "solo","kafka"  and "etcdraft"
    OrdererType: etcdraft
 
    Addresses:
        - orderer.HA.com:7050

    EtcdRaft:
        Consenters:
        - Host: orderer.HA.com
          Port: 7050
          ClientTLSCert: ../crypto-config/ordererOrganizations/HA.com/orderers/orderer.HA.com/tls/server.crt
          ServerTLSCert: ../crypto-config/ordererOrganizations/HA.com/orderers/orderer.HA.com/tls/server.crt
    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s
 
    # Batch Size: Controls the number of messages batched into a block
    BatchSize:
 
        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10
 
        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB
 
        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB
 
    # Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
    #    Brokers:
    #        - 127.0.0.1:9092
 
    # EtcdRaft defines configuration which must be set when the "etcdraft"
    # orderertype is chosen.
    # EtcdRaft:
        # The set of Raft replicas for this network. For the etcd/raft-based
        # implementation, we expect every replica to also be an OSN. Therefore,
        # a subset of the host:port items enumerated in this list should be
        # replicated under the Orderer.Addresses key above.
    #    Consenters:
    #        - Host: orderer.loc.com
    #          Port: 7050
    #          ClientTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer.loc.com/tls/server.crt
    #          ServerTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer.loc.com/tls/server.crt
    #        - Host: orderer2.loc.com
    #          Port: 7050
    #          ClientTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer2.loc.com/tls/server.crt
    #          ServerTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer2.loc.com/tls/server.crt
    #        - Host: orderer3.loc.com
    #          Port: 7050
    #          ClientTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer3.loc.com/tls/server.crt
    #          ServerTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer3.loc.com/tls/server.crt
    #        - Host: orderer4.loc.com
    #          Port: 7050
    #          ClientTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer4.loc.com/tls/server.crt
    #          ServerTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer4.loc.com/tls/server.crt
    #        - Host: orderer5.loc.com
    #          Port: 7050
    #          ClientTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer5.loc.com/tls/server.crt
    #          ServerTLSCert: crypto-config/ordererOrganizations/loc.com/orderers/orderer5.loc.com/tls/server.crt
 
    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:
 
    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"
 
################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
 
    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities
 
################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:
 
    TwoHospitalsGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *HAOrderer
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *WalesHospital
                    - *MargaretHospital

    TwoHospitalsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *WalesHospital
                - *MargaretHospital
            Capabilities:
                <<: *ApplicationCapabilities
